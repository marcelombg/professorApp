// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProfessorApp.Api.Data;

#nullable disable

namespace ProfessorApp.Api.Migrations
{
    [DbContext(typeof(ProfessorAppContext))]
    partial class ProfessorAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("AprendizadoTopico", b =>
                {
                    b.Property<int>("AprendizadosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TopicosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AprendizadosId", "TopicosId");

                    b.HasIndex("TopicosId");

                    b.ToTable("AprendizadoTopicos", (string)null);
                });

            modelBuilder.Entity("ProfessorApp.Api.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("ProfessorApp.Api.Models.Aprendizado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Aprendizados");
                });

            modelBuilder.Entity("ProfessorApp.Api.Models.Topico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Topicos");
                });

            modelBuilder.Entity("AprendizadoTopico", b =>
                {
                    b.HasOne("ProfessorApp.Api.Models.Aprendizado", null)
                        .WithMany()
                        .HasForeignKey("AprendizadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProfessorApp.Api.Models.Topico", null)
                        .WithMany()
                        .HasForeignKey("TopicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfessorApp.Api.Models.Aprendizado", b =>
                {
                    b.HasOne("ProfessorApp.Api.Models.Aluno", "Aluno")
                        .WithMany("Aprendizados")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("ProfessorApp.Api.Models.Aluno", b =>
                {
                    b.Navigation("Aprendizados");
                });
#pragma warning restore 612, 618
        }
    }
}
